import { Branches } from "../collections/branches.js";
import { Comments } from "../collections/comments.js";
import { Contributors } from "../collections/contributors.js";
import { Files } from "../collections/files.js";
import { Jwt } from "../collections/jwt.js";
import { Keys } from "../collections/keys.js";
import { Languages } from "../collections/languages.js";
import { Orders } from "../collections/orders.js";
import { PaymentCards } from "../collections/payment_cards.js";
import { Projects } from "../collections/projects.js";
import { QueuedProcesses } from "../collections/queued_processes.js";
import { Screenshots } from "../collections/screenshots.js";
import { Segments } from "../collections/segments.js";
import { Snapshots } from "../collections/snapshots.js";
import { Tasks } from "../collections/tasks.js";
import { TeamUserBillingDetails } from "../collections/team_user_billing_details.js";
import { TeamUsers } from "../collections/team_users.js";
import { Teams } from "../collections/teams.js";
import { TranslationProviders } from "../collections/translation_providers.js";
import { TranslationStatuses } from "../collections/translation_statuses.js";
import { Translations } from "../collections/translations.js";
import { UserGroups } from "../collections/user_groups.js";
import { Webhooks } from "../collections/webhooks.js";
import { BaseClient, ClientParams } from "./base_client.js";
export { ClientParams };
export declare class LokaliseApi extends BaseClient {
	constructor(params: ClientParams);
	branches(): Branches;
	comments(): Comments;
	contributors(): Contributors;
	files(): Files;
	jwt(): Jwt;
	keys(): Keys;
	languages(): Languages;
	orders(): Orders;
	paymentCards(): PaymentCards;
	projects(): Projects;
	queuedProcesses(): QueuedProcesses;
	screenshots(): Screenshots;
	segments(): Segments;
	snapshots(): Snapshots;
	tasks(): Tasks;
	teams(): Teams;
	teamUsers(): TeamUsers;
	teamUserBillingDetails(): TeamUserBillingDetails;
	translations(): Translations;
	translationProviders(): TranslationProviders;
	translationStatuses(): TranslationStatuses;
	userGroups(): UserGroups;
	webhooks(): Webhooks;
}
